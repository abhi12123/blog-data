<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Abhinav VP</title><link>https://blog.abhinavvp.com/</link><description>Recent content on Abhinav VP</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>[Home](/) &amp;#183; Theme [Simpleness](https://github.com/RainerChiang/simpleness) Powered by [Hugo](https://gohugo.io/)</copyright><lastBuildDate>Sun, 27 Feb 2022 18:29:59 +0530</lastBuildDate><atom:link href="https://blog.abhinavvp.com/index.xml" rel="self" type="application/rss+xml"/><item><title>I made a portfolio website using only HTML without any Styles. This is what I learned</title><link>https://blog.abhinavvp.com/posts/portfolio-website-using-only-html/</link><pubDate>Sun, 27 Feb 2022 18:29:59 +0530</pubDate><guid>https://blog.abhinavvp.com/posts/portfolio-website-using-only-html/</guid><description>I made a portfolio website using only HTML without any styles. The intention was to push the limits of pure HTML and see its capabilities, and it was worth it. These are some of the things I’ve learned during the process.
1.&amp;lt;body&amp;gt; tag has some styling properties The body tag has some styling properties, but most of them are depreciated. There are attributes to change background color, text color, background image, hyperlink colors, and margin.</description></item><item><title>Why You Should Use Error Boundaries in React</title><link>https://blog.abhinavvp.com/posts/why-you-should-use-error-boundaries-in-react/</link><pubDate>Sat, 12 Feb 2022 18:03:10 +0530</pubDate><guid>https://blog.abhinavvp.com/posts/why-you-should-use-error-boundaries-in-react/</guid><description>React Error Boundaries were introduced in React version 16 to generate a fallback UI in case a component were to crash. This was to ensure that a JavaScript error in a single component should not crash the whole app.
Consider the following React application which renders the component DisplayName displaying the name according to the input data.
import DisplayName from &amp;#34;./DisplayName&amp;#34;; function App() { return ( &amp;lt;div className=&amp;#34;App&amp;#34;&amp;gt; &amp;lt;DisplayName name={{ firstName: &amp;#34;John&amp;#34;, secondName: &amp;#34;Doe&amp;#34; }} /&amp;gt; &amp;lt;DisplayName name={{ firstName: &amp;#34;Lex&amp;#34;, secondName: &amp;#34;Luthor&amp;#34; }} /&amp;gt; &amp;lt;DisplayName name={{ firstName: &amp;#34;Peter&amp;#34;, secondName: &amp;#34;Parker&amp;#34; }} /&amp;gt; &amp;lt;/div&amp;gt; ); } export default App; The DisplayName component simply displays the name from the passed down name object.</description></item><item><title>Another 4 JavaScript Tips for Shorter Code</title><link>https://blog.abhinavvp.com/posts/another-4-javascript-tips-for-shorter-code/</link><pubDate>Sun, 28 Nov 2021 17:17:20 +0530</pubDate><guid>https://blog.abhinavvp.com/posts/another-4-javascript-tips-for-shorter-code/</guid><description>This is a continuation to my earlier article : 4 JavaScript tips for shorter code
1. Replace Switch or If-Else with key value pairs The switch statement and if-else statement evaluates an expression and executes statements associated with that case. But as the number of cases increases the code grows as well.
function returnDaySwitch(val) { switch (val) { case 1: return &amp;#34;It&amp;#39;s monday&amp;#34;; case 2: return &amp;#34;It&amp;#39;s tuesday&amp;#34;; case 3: return &amp;#34;It&amp;#39;s wednesday&amp;#34;; case 4: return &amp;#34;It&amp;#39;s thursday&amp;#34;; case 5: return &amp;#34;It&amp;#39;s friday&amp;#34;; case 6: return &amp;#34;It&amp;#39;s saturday&amp;#34;; case 7: return &amp;#34;It&amp;#39;s sunday&amp;#34;; default: return &amp;#34;Enter a value between 1 - 7&amp;#34;; } } function returnDayIfElse(val) { if(val==1){ return &amp;#34;It&amp;#39;s monday&amp;#34;; }else if(val==2){ return &amp;#34;It&amp;#39;s tuesday&amp;#34;; }else if(val==3){ return &amp;#34;It&amp;#39;s wednesday&amp;#34;; }else if(val==4){ return &amp;#34;It&amp;#39;s thursday&amp;#34;; }else if(val==5){ return &amp;#34;It&amp;#39;s friday&amp;#34;; }else if(val==6){ return &amp;#34;It&amp;#39;s saturday&amp;#34;; }else if(val==7){ return &amp;#34;It&amp;#39;s sunday&amp;#34;; }else{ return &amp;#34;Enter a value between 1 - 7&amp;#34;; } } const day = 3; console.</description></item><item><title>How React Rethinks Best Practices</title><link>https://blog.abhinavvp.com/posts/how-react-rethinks-best-practices/</link><pubDate>Sun, 21 Nov 2021 19:08:50 +0530</pubDate><guid>https://blog.abhinavvp.com/posts/how-react-rethinks-best-practices/</guid><description>React.js is currently the most popular front-end JavaScript library for building Web applications. It is an open-source JavaScript library that is used for building user interfaces. It renders the UI as per user requirements and plays nicely with any stack. In this article, we shall go through how React rethinks some of the best practices in web development.
Separation of Concern The separation of concerns (SoC) is one of the most fundamental principles in software development.</description></item><item><title>React Explained and Made Simple</title><link>https://blog.abhinavvp.com/posts/react-explained-and-made-simple/</link><pubDate>Sun, 21 Nov 2021 17:16:42 +0530</pubDate><guid>https://blog.abhinavvp.com/posts/react-explained-and-made-simple/</guid><description>Is React a Framework ? As per the landing page of React , it is a JavaScript library to build user interfaces. Its not a framework, but a library. Angular, Vue, Next.js, Gatsby, Redwood.js etc are examples for frameworks. A framework includes resources that a large-scale application might need : creating forms, running automated tests, making network requests etc. Whereas React itself does not include many of these functionalities. Core react is used only to build User Interfaces.</description></item><item><title>4 JavaScript Tips for Shorter Code</title><link>https://blog.abhinavvp.com/posts/4-javascript-tips-for-shorter-code/</link><pubDate>Sun, 21 Nov 2021 16:09:31 +0530</pubDate><guid>https://blog.abhinavvp.com/posts/4-javascript-tips-for-shorter-code/</guid><description>There are plenty of tips which can be followed to make the JavaScript code shorter as well less complicated. I will share four of such tips which have reduced the effort and development time for me a lot while coding.
1. Short Circuiting This can be used when you’ll have to use a simple if condition.
if( x == 0 ){ foo() } Short circuiting can be achieved by using &amp;amp;&amp;amp; operator.</description></item><item><title>Using Clamp() for Responsiveness</title><link>https://blog.abhinavvp.com/posts/using-clamp-for-responsiveness/</link><pubDate>Sun, 21 Nov 2021 15:52:12 +0530</pubDate><guid>https://blog.abhinavvp.com/posts/using-clamp-for-responsiveness/</guid><description>Clamp() is one of the most useful yet underrated functions in CSS to ensure responsiveness in web design. Web pages can be viewed from multiple platforms, and you will have to ensure that the design won&amp;rsquo;t break in any of the viewports.
Consider an id &amp;rsquo;text&amp;rsquo; with font-size as 3rem.
#text{ font-size:3rem; } The problem is that irrespective of the viewport, font size remains constant. One way to deal with this is to replace rem with % or vw so that the font size becomes relative to the viewport.</description></item><item><title>#7 Ditching the below Idea</title><link>https://blog.abhinavvp.com/logs/7/</link><pubDate>Sat, 13 Mar 2021 00:00:00 +0000</pubDate><guid>https://blog.abhinavvp.com/logs/7/</guid><description>Discused it with a friend of mine who asked the obvious question :
but why ? Till now I had two repositories for my blog, one to host the github data and markdown files, and the other to serve the blog.
Which led to some mundane task to publish the posts.
Ill have to push the changes to one branch, then generate the webpage and serve it to another repo.</description></item><item><title>#6 Idea for automating this daily logger</title><link>https://blog.abhinavvp.com/logs/6/</link><pubDate>Fri, 12 Mar 2021 00:00:00 +0000</pubDate><guid>https://blog.abhinavvp.com/logs/6/</guid><description>Improved the UI for Profilinator
Changed the theme for hugo blog
Slept the whole evening 0-0
A daily blog using Github Gist Github APIs have an option to fetch gists of any user. The gists can be saved in markdown as well. It could be possible to use Gists to save daily logs, which can be fetched and converted to HTML and displayed in the browser using Javascript. Need to check further more.</description></item><item><title>#5 Created a simple landing page</title><link>https://blog.abhinavvp.com/logs/5/</link><pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate><guid>https://blog.abhinavvp.com/logs/5/</guid><description>Profilinator is web app that I&amp;rsquo;ve been working on for past few months. It generates a downloadable html porfolio website from given input fields.
Even though there are some other applications that does the same, this one has an extra feature of generating data from Github and Devto profiles of the user. The data generation is using API calls that does not require authentication.
An extra feature would be to use Linkedin profile to generate data, that could be a real gamechanger.</description></item><item><title>#4 Profilinator: Update</title><link>https://blog.abhinavvp.com/logs/4/</link><pubDate>Wed, 10 Mar 2021 00:00:00 +0000</pubDate><guid>https://blog.abhinavvp.com/logs/4/</guid><description>Profilinator is web app that I&amp;rsquo;ve been working on for past few months. It generates a downloadable html porfolio website from given input fields.
Even though there are some other applications that does the same, this one has an extra feature of generating data from Github and Devto profiles of the user. The data generation is using API calls that does not require authentication.
An extra feature would be to use Linkedin profile to generate data, that could be a real gamechanger.</description></item><item><title>#3 PostgreSQL notes II</title><link>https://blog.abhinavvp.com/logs/3/</link><pubDate>Tue, 09 Mar 2021 00:00:00 +0000</pubDate><guid>https://blog.abhinavvp.com/logs/3/</guid><description>Chapter 3. Advanced Feature Views a name to the query that you can refer to CREATE VIEW myview AS SELECT name, temp_lo, temp_hi, prcp, date, location FROM weather, cities WHERE city = name; SELECT * FROM myview;
Foreign Keys to make sure that no one can insert rows in the one table that do not have a matching entry in another table. This is called maintaining the referential integrity of your data.</description></item><item><title>#2 PostgreSQL notes I</title><link>https://blog.abhinavvp.com/logs/2/</link><pubDate>Mon, 08 Mar 2021 00:00:00 +0000</pubDate><guid>https://blog.abhinavvp.com/logs/2/</guid><description>Tutorial Chapter 1. Tutorial Create a database createdb dbname* Delete a database dropdb dbname* To start psql to interact with database psql dbname* To view tables in database \t Chapter 2. The SQL Language PostgreSQL is a relational database management system (RDBMS). That means it is a system for managing data stored in relations. Relation is essentially a mathematical term for table Creating a New Table CREATE TABLE weather ( city varchar(80), temp_lo int, &amp;ndash; low temperature temp_hi int, &amp;ndash; high temperature prcp real, &amp;ndash; precipitation date date );</description></item><item><title>#1 Decided to learn SQL in depth</title><link>https://blog.abhinavvp.com/logs/1/</link><pubDate>Sun, 07 Mar 2021 00:00:00 +0000</pubDate><guid>https://blog.abhinavvp.com/logs/1/</guid><description>I had learned SQL back in college, which gave me an idea about how databases work, transactions, relations etc. I have mostly focused on Front end technologies, since I had found them more interesting and creative than the Back end.
On joining Ceegees Software Solutions back in 2021, I have been working on a web application which uses NestJs with PostgreSQL and typeOrm for the backend. I was able to achieve most of the features with my basic knowledge of sql and typeOrm, but it feels like going in depth like I have with the front end will help me understand and create better, error devoid code.</description></item><item><title>About</title><link>https://blog.abhinavvp.com/about/</link><pubDate>Tue, 22 Sep 2020 10:37:58 +0530</pubDate><guid>https://blog.abhinavvp.com/about/</guid><description>About Yourself This is some static page where you can write about yourself.
hugo theme simpleness A hugo theasdasdme ported form contrast-hugo</description></item></channel></rss>